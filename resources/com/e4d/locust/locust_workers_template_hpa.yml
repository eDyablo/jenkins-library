# ---- Create LOCUST slaves(workers) Deployment----
kind: Deployment
apiVersion: apps/v1beta1
metadata:
  name: locust-worker
  namespace: ${NAMESPACE ?: namespace }
  labels:
    name: locust
    role: worker
spec:
  replicas: ${ EXPECT_SLAVES ?: expectSlaves }
  # replicas: <%= EXPECT_SLAVES ?: expectSlaves + 1 %>
  template:
    metadata:
      name: locust-worker
      labels:
        name: locust
        role: worker
    spec:
      containers:
        - name: locust-worker
          image: artifacts.k8s.us-west-2.dev.e4d.com:8082/locust:latest
          env:
            - name: LOCUST_MODE
              value: worker
            - name: LOCUST_MASTER
              value: locust-master
            - name: TARGET_HOST
              value: ${HOST ?: host }
            - name: LOCUSTFILE_PATH
              value: ${LOCUSTFILE_PATH ?: locustFile }
            - name: LOCUST_TEST
              value: ${LOCUST_CLASS ?: locustClass }
            - name: ADD_OPTIONS
              value: --logfile=locust-slave.log
#            - name: MAX_LATENCY
#              value: "11000"
            - name: ADD_COMMAND
              value: ${ADD_COMMAND ?: 'ls -la && echo start sleeping for 10 sec. && sleep 10 && echo Stopping Container.' }
          volumeMounts:
            - name: load-test
              mountPath: /locust-tasks/load_test
              readOnly: true
            - name: configs
              mountPath: /locust-tasks/load_test/configs
              readOnly: true
          resources:
            limits:
              cpu: ${ service?.limits?.cpu ?: 0.5 }
              memory: ${ service.limits?.memory ?: '400Mi' }
            requests:
              cpu: ${ service.requests?.cpu ?: 0.5 }
              memory: ${ service?.requests?.memory ?: '400Mi' }
      imagePullSecrets:
        - name: regsecret
      volumes:
        - name: load-test
          configMap:
            name: load-test
        - name: configs
          configMap:
            name: configs
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: locust-worker-hpa
  namespace: ${NAMESPACE ?: namespace }
spec:
  scaleTargetRef:
    apiVersion: extensions/v1beta1
    kind: Deployment
    name: locust-worker
  minReplicas: <%= EXPECT_SLAVES ?: expectSlaves ?: 1 %> # ${ MINIMUM_REPLICAS_COUNT ?: 1 }
  maxReplicas: ${  maxSlaves ?: 5 } # ${ MAXIMUM_REPLICAS_COUNT ?: 7 }
  metrics:
  - type: Resource
    resource:
      name: cpu
      targetAverageUtilization: 60
  - type: Resource
    resource:
      name: memory
      targetAverageUtilization: 70